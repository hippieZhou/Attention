<UserControl
    x:Class="Attention.UserControls.PhotoItemControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cc="using:Attention.Controls"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:Attention.UserControls"
    xmlns:lottie="using:Microsoft.Toolkit.Uwp.UI.Lottie"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:Attention.Models"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <Grid x:Name="rootGrid" Visibility="{x:Bind ViewModel.Visibility, Mode=OneWay}">
        <Grid.Background>
            <SolidColorBrush Opacity="0.8" Color="{ThemeResource SystemChromeAltHighColor}" />
            <!--<media:BackdropBlurBrush
                xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
                Amount="4"
                FallbackColor="{ThemeResource SystemChromeAltHighColor}" />-->
        </Grid.Background>
        <i:Interaction.Behaviors>
            <ic:EventTriggerBehavior EventName="Tapped">
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.HideCommand, Mode=OneWay}" />
            </ic:EventTriggerBehavior>
        </i:Interaction.Behaviors>
        <Grid
            x:Name="destinationElement"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
            ManipulationCompleted="DestinationElement_ManipulationCompleted"
            ManipulationDelta="DestinationElement_ManipulationDelta"
            ManipulationMode="TranslateX, TranslateY, Scale"
            ManipulationStarted="DestinationElement_ManipulationStarted">
            <i:Interaction.Behaviors>
                <ic:EventTriggerBehavior EventName="Loaded">
                    <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand, Mode=OneWay}" CommandParameter="{Binding ElementName=destinationElement}" />
                </ic:EventTriggerBehavior>
            </i:Interaction.Behaviors>
            <Grid.RenderTransform>
                <CompositeTransform x:Name="destinationElement_Transform" />
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <!--<muxc:AnimatedVisualPlayer
                Grid.Row="0"
                Width="240"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <lottie:LottieVisualSource UriSource="ms-appx:///Assets/loading-animation.json" />
            </muxc:AnimatedVisualPlayer>-->
            <controls:ImageEx
                x:Name="imageEx"
                Grid.Row="0"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                CacheMode="BitmapCache"
                IsCacheEnabled="True"
                Source="{x:Bind ViewModel.Model.Item.LargeImageURL, Mode=OneWay}"
                Stretch="UniformToFill" />
            <Grid
                Grid.Row="1"
                Height="60"
                Padding="12,0"
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                <StackPanel
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                        </Style>
                    </StackPanel.Resources>
                    <PersonPicture
                        Width="38"
                        Height="38"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        ProfilePicture="{x:Bind ViewModel.Model.Item.UserImageURL, Mode=OneWay, TargetNullValue=ms-appx:///Assets/user.png}" />
                    <TextBlock
                        Margin="12,0,8,0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Style="{ThemeResource BaseTextBlockStyle}"
                        Text="{x:Bind ViewModel.Model.Item.User, Mode=OneWay}" />
                    <TextBlock Foreground="#696464" Text="[" />
                    <TextBlock Foreground="#696464" Text="{x:Bind ViewModel.Model.Item.ImageWidth, Mode=OneWay}" />
                    <TextBlock Foreground="#696464" Text="x" />
                    <TextBlock Foreground="#696464" Text="{x:Bind ViewModel.Model.Item.ImageHeight, Mode=OneWay}" />
                    <TextBlock Foreground="#696464" Text="]" />
                </StackPanel>
                <StackPanel
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="12">
                    <cc:DownloadControl Command="{x:Bind ViewModel.DownloadCommand, Mode=OneWay}" />
                    <Button Command="{x:Bind ViewModel.InfoCommand, Mode=OneWay}" Style="{StaticResource InformationButtonStyle}" />
                </StackPanel>
            </Grid>
            <ProgressBar
                Grid.Row="1"
                Height="2"
                VerticalAlignment="Top"
                Background="Transparent"
                Foreground="#3db1ff"
                Maximum="100"
                Minimum="0"
                Value="{x:Bind ViewModel.Model.Progress, Mode=OneWay}" />
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource ExpandedModeThresholdWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="destinationElement.Width" Value="900" />
                        <Setter Target="imageEx.Height" Value="520" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource CompactModeThresholdWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="destinationElement.Width" Value="600" />
                        <Setter Target="imageEx.Height" Value="320" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="destinationElement.Width" Value="440" />
                        <Setter Target="imageEx.Height" Value="240" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>
