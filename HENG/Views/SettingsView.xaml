<UserControl
    x:Class="HENG.Views.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:local="using:HENG.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uc="using:HENG.UserControls"
    xmlns:xaml="using:Windows.UI.Xaml"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="TextBoxStyle1" TargetType="TextBox">
            <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}" />
            <Setter Property="Background" Value="{ThemeResource TextControlBackground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}" />
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}" />
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}" />
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}" />
            <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}" />
            <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}" />
            <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="IconButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid x:Name="ButtonLayoutGrid">
                                                    <TextBlock
                                                        x:Name="GlyphElement"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                        FontSize="12"
                                                        FontStyle="Normal"
                                                        Foreground="{ThemeResource TextControlButtonForeground}"
                                                        Text="{TemplateBinding Content}" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ContentPresenter
                                x:Name="HeaderContentPresenter"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="{StaticResource TextBoxTopHeaderMargin}"
                                VerticalAlignment="Top"
                                x:DeferLoadStrategy="Lazy"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                FontWeight="Normal"
                                Foreground="{ThemeResource TextControlHeaderForeground}"
                                TextWrapping="Wrap"
                                Visibility="Collapsed" />
                            <Border
                                x:Name="BorderElement"
                                Grid.Row="1"
                                Grid.RowSpan="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                MinWidth="{ThemeResource TextControlThemeMinWidth}"
                                MinHeight="{ThemeResource TextControlThemeMinHeight}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Control.IsTemplateFocusTarget="True"
                                CornerRadius="{TemplateBinding CornerRadius}" />
                            <TextBlock
                                x:Name="ContentElement"
                                Grid.Row="1"
                                Grid.Column="0"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                AutomationProperties.AccessibilityView="Raw"
                                Text="{TemplateBinding Text}" />
                            <TextBlock
                                x:Name="PlaceholderTextContentPresenter"
                                Grid.Row="1"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                Margin="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}"
                                IsHitTestVisible="False"
                                Text="{TemplateBinding PlaceholderText}"
                                TextAlignment="{TemplateBinding TextAlignment}"
                                TextWrapping="{TemplateBinding TextWrapping}" />
                            <Button
                                x:Name="IconButton"
                                Grid.Row="1"
                                Grid.Column="1"
                                MinWidth="34"
                                Margin="{ThemeResource HelperButtonThemePadding}"
                                VerticalAlignment="Stretch"
                                extensions:Mouse.Cursor="Arrow"
                                AutomationProperties.AccessibilityView="Raw"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Tag}"
                                FontSize="{TemplateBinding FontSize}"
                                IsTabStop="False"
                                Style="{StaticResource IconButtonStyle}" />
                            <ContentPresenter
                                x:Name="DescriptionPresenter"
                                Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                x:Load="False"
                                AutomationProperties.AccessibilityView="Raw"
                                Content="{TemplateBinding Description}"
                                Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Light" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <!--<VisualStateGroup x:Name="ButtonStates">
                                    <VisualState x:Name="ButtonVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IconButton" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ButtonCollapsed" />
                                </VisualStateGroup>-->
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Grid Background="{ThemeResource SystemControlAcrylicWindowBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <uc:NavBackControl Grid.Row="0" Margin="15,36" />
        <controls:HeaderedItemsControl Grid.Row="1" HorizontalAlignment="Center">
            <controls:HeaderedItemsControl.Header>
                <TextBlock
                    x:Uid="Settings_Personalization"
                    Margin="0,12"
                    Style="{ThemeResource SubtitleTextBlockStyle}" />
            </controls:HeaderedItemsControl.Header>

            <ComboBox
                x:Name="Settings_Theme"
                x:Uid="Settings_Theme"
                Width="400"
                Margin="0,6"
                CornerRadius="4"
                SelectedIndex="{Binding ElementTheme, Mode=TwoWay}">
                <ComboBoxItem>
                    <ComboBoxItem.DataContext>
                        <xaml:ElementTheme>Default</xaml:ElementTheme>
                    </ComboBoxItem.DataContext>
                    <ComboBoxItem.Content>
                        <TextBlock x:Uid="Settings_Theme_Default" />
                    </ComboBoxItem.Content>
                </ComboBoxItem>
                <ComboBoxItem>
                    <ComboBoxItem.DataContext>
                        <xaml:ElementTheme>Light</xaml:ElementTheme>
                    </ComboBoxItem.DataContext>
                    <ComboBoxItem.Content>
                        <TextBlock x:Uid="Settings_Theme_Light" />
                    </ComboBoxItem.Content>
                </ComboBoxItem>
                <ComboBoxItem>
                    <ComboBoxItem.DataContext>
                        <xaml:ElementTheme>Dark</xaml:ElementTheme>
                    </ComboBoxItem.DataContext>
                    <ComboBoxItem.Content>
                        <TextBlock x:Uid="Settings_Theme_Dark" />
                    </ComboBoxItem.Content>
                </ComboBoxItem>
            </ComboBox>

            <ComboBox
                Width="{Binding ElementName=Settings_Theme, Path=ActualWidth}"
                Margin="0,6"
                CornerRadius="4"
                Header="ScrollHeader Mode"
                IsEnabled="False"
                SelectedIndex="{Binding HeaderMode, Mode=TwoWay}">
                <ComboBoxItem>
                    <ComboBoxItem.DataContext>
                        <controls:ScrollHeaderMode>None</controls:ScrollHeaderMode>
                    </ComboBoxItem.DataContext>
                    <ComboBoxItem.Content>
                        <TextBlock Text="None" />
                    </ComboBoxItem.Content>
                </ComboBoxItem>
                <ComboBoxItem>
                    <ComboBoxItem.DataContext>
                        <controls:ScrollHeaderMode>QuickReturn</controls:ScrollHeaderMode>
                    </ComboBoxItem.DataContext>
                    <ComboBoxItem.Content>
                        <TextBlock Text="QuickReturn" />
                    </ComboBoxItem.Content>
                </ComboBoxItem>
                <ComboBoxItem>
                    <ComboBoxItem.DataContext>
                        <controls:ScrollHeaderMode>Sticky</controls:ScrollHeaderMode>
                    </ComboBoxItem.DataContext>
                    <ComboBoxItem.Content>
                        <TextBlock Text="Sticky" />
                    </ComboBoxItem.Content>
                </ComboBoxItem>
                <ComboBoxItem>
                    <ComboBoxItem.DataContext>
                        <controls:ScrollHeaderMode>Fade</controls:ScrollHeaderMode>
                    </ComboBoxItem.DataContext>
                    <ComboBoxItem.Content>
                        <TextBlock Text="Fade" />
                    </ComboBoxItem.Content>
                </ComboBoxItem>
            </ComboBox>

            <controls:HeaderedContentControl x:Uid="Settings_Download" Margin="0,6">
                <Button
                    Width="{Binding ElementName=Settings_Theme, Path=ActualWidth}"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Left"
                    Command="{x:Bind ViewModel.OpenFolderCommand, Mode=OneWay}"
                    Content="{x:Bind ViewModel.DownloadPath, Mode=OneWay}"
                    CornerRadius="4"
                    Style="{ThemeResource ButtonRevealStyle}" />
            </controls:HeaderedContentControl>

            <StackPanel
                Margin="24"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                    <Button
                        Width="48"
                        Height="48"
                        Margin="4"
                        Background="Transparent"
                        Style="{ThemeResource ButtonRevealStyle}">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE715;" />
                    </Button>
                    <Button
                        Width="48"
                        Height="48"
                        Margin="4"
                        Background="Transparent"
                        Style="{ThemeResource ButtonRevealStyle}">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE715;" />
                    </Button>
                    <Button
                        Width="48"
                        Height="48"
                        Margin="4"
                        Background="Transparent"
                        Style="{ThemeResource ButtonRevealStyle}">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE715;" />
                    </Button>
                </StackPanel>
                <StackPanel Margin="0,12" HorizontalAlignment="Center">
                    <TextBlock
                        Foreground="Gray"
                        Style="{ThemeResource BodyTextBlockStyle}"
                        Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />
                    <TextBlock
                        x:Uid="Settings_AboutDescription"
                        Margin="0,12"
                        Foreground="Gray"
                        Style="{ThemeResource BodyTextBlockStyle}" />
                </StackPanel>
            </StackPanel>

        </controls:HeaderedItemsControl>
    </Grid>
</UserControl>
